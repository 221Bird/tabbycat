# Generated by Django 2.0.8 on 2018-10-23 19:44
# Extended manually to create BulkNotification objects and Message-IDs
import re

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


def create_bulk_notifications(apps, schema_editor):
    SentMessageRecord = apps.get_model("notifications", "SentMessageRecord")
    BulkNotification = apps.get_model("notifications", "BulkNotification")

    timestamps = []
    for m in SentMessageRecord.objects.all():
        if m.timestamp not in timestamps: # Avoid DB hits
            timestamps.append(m.timestamp)
            BulkNotification.objects.create(event=m.event, timestamp=m.timestamp,
                                            round=m.round, tournament=m.tournament)
        m.notification_id = timestamps.index(m.timestamp) + 1
        m.save()


def get_message_ids(apps, schema_editor):
    SentMessageRecord = apps.get_model("notifications", "SentMessageRecord")

    p = re.compile("Message-ID: (.*)\n")

    for m in SentMessageRecord.objects.all():
        p.search(m.message)

        if _.group(1) is not None:
            m.message_id = _.group(1)
            m.save()


class Migration(migrations.Migration):

    dependencies = [
        ('tournaments', '0005_remove_tournament_current_round'),
        ('notifications', '0005_auto_20180915_1152'),
    ]

    operations = [
        migrations.CreateModel(
            name='BulkNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(blank=True, choices=[('p', 'team points'), ('c', 'ballot confirmed'), ('f', 'feedback URL'), ('b', 'ballot URL'), ('u', 'landing page URL'), ('d', 'draw released'), ('t', 'registration'), ('m', 'motion(s) released')], max_length=1, verbose_name='event')),
                ('timestamp', models.DateTimeField(auto_now=True, verbose_name='timestamp')),
                ('round', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tournaments.Round', verbose_name='round')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.Tournament', verbose_name='tournament')),
            ],
            options={
                'verbose_name': 'bulk notification',
                'verbose_name_plural': 'bulk notifications',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='sentmessagerecord',
            name='notification',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='notifications.BulkNotification', verbose_name='notification'),
            preserve_default=False,
        ),
        migrations.RunPython(create_bulk_notifications),
        migrations.CreateModel(
            name='EmailStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True, verbose_name='timestamp')),
                ('event', models.CharField(choices=[('processed', 'Processed'), ('dropped', 'Dropped'), ('deferred', 'Deferred'), ('delivered', 'Delivered'), ('bounce', 'Bounced'), ('open', 'Opened'), ('click', 'Clicked'), ('unsubscribe', 'Unsubscribed'), ('spamreport', 'Marked as spam'), ('group_unsubscribe', 'Unsubscribed from group'), ('group_resubscribe', 'Resubscribed to group')], max_length=20, verbose_name='event')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='context')),
            ],
            options={
                'verbose_name': 'email status',
                'verbose_name_plural': 'email statuses',
                'ordering': ['-timestamp'],
                'get_latest_by': '-timestamp'
            },
        ),
        migrations.AlterModelOptions(
            name='sentmessagerecord',
            options={'ordering': ['-notification__timestamp', '-timestamp', '-recipient__name'], 'verbose_name': 'sent message', 'verbose_name_plural': 'sent messages'},
        ),
        migrations.RemoveField(
            model_name='sentmessagerecord',
            name='event',
        ),
        migrations.RemoveField(
            model_name='sentmessagerecord',
            name='round',
        ),
        migrations.RemoveField(
            model_name='sentmessagerecord',
            name='tournament',
        ),
        migrations.AddField(
            model_name='sentmessagerecord',
            name='message_id',
            field=models.CharField(null=True, max_length=254, unique=True, verbose_name='Message-ID'),
            preserve_default=False,
        ),
        migrations.RunPython(get_message_ids),
        migrations.AlterField(
            model_name='sentmessagerecord',
            name='recipient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='participants.Person', verbose_name='recipient'),
        ),
        migrations.AddField(
            model_name='emailstatus',
            name='email',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.SentMessageRecord', verbose_name='email message'),
        ),
    ]
